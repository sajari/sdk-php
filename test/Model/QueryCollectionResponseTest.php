<?php
/**
 * QueryCollectionResponseTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Sajari
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Search.io API
 *
 * Search.io offers a search and discovery service with NeuralsearchÂ®, the world's first instant AI search technology. Businesses of all sizes use Search.io to build site search and discovery solutions that maximize e-commerce revenue, optimize on-site customer experience, and scale their online presence.
 *
 * The version of the OpenAPI document: v4
 * Contact: support@search.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Sajari\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * QueryCollectionResponseTest Class Doc Comment
 *
 * @category    Class
 * @description QueryCollectionResponse
 * @package     Sajari
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class QueryCollectionResponseTest extends TestCase
{
    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "QueryCollectionResponse"
     */
    public function testQueryCollectionResponse()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "active_promotions"
     */
    public function testPropertyActivePromotions()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "aggregate_filters"
     */
    public function testPropertyAggregateFilters()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "aggregates"
     */
    public function testPropertyAggregates()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "banners"
     */
    public function testPropertyBanners()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "feature_score_weight"
     */
    public function testPropertyFeatureScoreWeight()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "pipeline"
     */
    public function testPropertyPipeline()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "processing_duration"
     */
    public function testPropertyProcessingDuration()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "query_id"
     */
    public function testPropertyQueryId()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "redirects"
     */
    public function testPropertyRedirects()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "results"
     */
    public function testPropertyResults()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "total_size"
     */
    public function testPropertyTotalSize()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }

    /**
     * Test attribute "variables"
     */
    public function testPropertyVariables()
    {
        // TODO: implement
        $this->markTestIncomplete("Not implemented");
    }
}
